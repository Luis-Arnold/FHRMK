---
title: "RMKAgeing"
format: html
editor: visual
---

Methodology

Describe Data

# Preconditions

### Install Packages

```{r}

if (!requireNamespace("readr", quietly = TRUE)) {
  install.packages("readr")
}
if (!requireNamespace("dplyr", quietly = TRUE)) {
  install.packages("dplyr")
}
if (!requireNamespace("caret", quietly = TRUE)) {
  install.packages("caret")
}
if (!requireNamespace("leaps", quietly = TRUE)) {
  install.packages("leaps")
}
if (!requireNamespace("corrplot", quietly = TRUE)) {
  install.packages("corrplot")
}
if (!requireNamespace("tidyr", quietly = TRUE)) {
  install.packages("tidyr")
}
if (!requireNamespace("randomForest", quietly = TRUE)) {
  install.packages("randomForest")
}
if (!requireNamespace("ggplot2", quietly = TRUE)) {
  install.packages("ggplot2")
}
if (!requireNamespace("car", quietly = TRUE)) {
  install.packages("car")
}
if (!requireNamespace("plotly", quietly = TRUE)) {
  install.packages("plotly")
}
if (!requireNamespace("parallel", quietly = TRUE)) {
  install.packages("parallel")
}
if (!requireNamespace("xgboost", quietly = TRUE)) {
  install.packages("xgboost")
}
if (!requireNamespace("readxl", quietly = TRUE)) {
  install.packages("readxl")
}
if (!requireNamespace("countrycode", quietly = TRUE)) {
  install.packages("countrycode")
}
```

### Load Packages

```{r}

library(plotly)
library(corrplot)
library(readr)
library(caret)
library(leaps)
library(tidyr)
library(dplyr)
library(randomForest)
library(ggplot2)
library(car)
library(parallel)
library(xgboost)
library(readxl)
library(countrycode)
library(rpart)
library(rpart.plot)
```

### Load Dataset

Share dataset and [World Development Indicators](https://datacatalog.worldbank.org/search/dataset/0037712/World-Development-Indicators?) of the World Bank Group

```{r}

SHARE_path <- "C:/Users/luisj/Documents/Github/FHRMK/RawData/easySHARE_rel9-0-0_R/easySHARE_rel9_0_0.rda"

WDIcountry_path <- "C:/Users/luisj/Documents/Github/FHRMK/RawData/WDI_CSV_2024_10_24/WDICountry.csv"

global_crisis_data_path <- "C:/Users/luisj/Documents/Github/FHRMK/RawData/20160923_global_crisis_data.xlsx"

#setwd(filePath)

load(SHARE_path)

WDIcountry_dataset <- read.csv(WDIcountry_path, header = TRUE, sep = ",")

global_crisis_data <- read_excel(global_crisis_data_path, na = c("",
                                                                 "n/a",
                                                                 "N/A",
                                                                 "n.a.",
                                                                 "NA"))

rm(SHARE_path, global_crisis_data_path)
```

# Clean Data

Get European country tags of financial Data

```{r}

if (exists("WDIcountry_dataset")) {
  CountryTags <- WDIcountry_dataset %>%
    filter(Other.groups == "Euro area"
           | Country.Code == "CHE"
           | Country.Code == "ISR") %>%
    select(Country.Code)
  
  rm(WDIcountry_dataset) #CLEANUP
}

head(CountryTags)
```

Select relevant Columns and rows, remove irrelevant Countries from Crisis Data

Remove data older than 20 years before the birth of the oldest participant.

```{r}

relevant_first_year <- min(easySHARE_rel9_0_0$int_year - easySHARE_rel9_0_0$age, na.rm = TRUE) - 20

if (exists("global_crisis_data")) {
  EU_crisis_dataset <- global_crisis_data %>%
    select("CC3",
           "Country",
           "Year",
           "Banking Crisis",
           "Systemic Crisis",
           "Gold Standard",
           "Currency Crises",
           "Inflation Crises") %>%
    filter(Year >= relevant_first_year) %>%
    inner_join(CountryTags, global_crisis_data, by = c("CC3" = "Country.Code"))
  
  rm(global_crisis_data) #CLEANUP
}

EU_crisis_dataset %>%
  distinct(Country, .keep_all = TRUE) %>%
  head(6)
```

### Tidy up numeric in SHARE

```{r}

NA_counts <- colSums(is.na(easySHARE_rel9_0_0))
NA_counts[NA_counts > 0]
```

### Impute Values with median

Using median instead of median to reduce impact of outliers.

```{r}

easySHARE_rel9_0_0$income_pct_w9[is.na(easySHARE_rel9_0_0$income_pct_w9)] <- median(easySHARE_rel9_0_0$income_pct_w9, na.rm = TRUE)

NA_counts <- colSums(is.na(easySHARE_rel9_0_0))
NA_counts[NA_counts > 0]
```

Count number of participants with Big 5 personality trait answers

```{r}

head(easySHARE_rel9_0_0)
```

Looking at how many people have values for big five personality traits.

```{r}

citizens_with_bfp <- easySHARE_rel9_0_0 %>%
  filter(birth_country %in% citizenship &
         birth_country == country_mod) %>%
  filter(bfi10_extra_mod > 0 &
         bfi10_agree_mod > 0 &
         bfi10_consc_mod > 0 &
         bfi10_neuro_mod > 0 &
         bfi10_open_mod > 0) %>%
  distinct(mergeid, .keep_all = TRUE) %>%
  summarise(count = n())

citizens_with_bfp
```

We look at distinct people

### Identify Citizens in SHARE

-   Birth country -\> Country born in.

-   Citizenship -\> Current citizenships (can be multiple).

-   Country Mod -\> Country as ISO Code.

```{r}

if (exists("easySHARE_rel9_0_0")) {
  citizens <- easySHARE_rel9_0_0 %>%
    filter(birth_country %in% citizenship &
           birth_country == country_mod) %>%
    filter(bfi10_extra_mod > 0 &
           bfi10_agree_mod > 0 &
           bfi10_consc_mod > 0 &
           bfi10_neuro_mod > 0 &
           bfi10_open_mod > 0) %>%
    distinct(mergeid, .keep_all = TRUE) %>%
    select("mergeid",
           "int_year",
           "age",
           "country_mod",
           "female",
           "bfi10_extra_mod",
           "bfi10_agree_mod",
           "bfi10_consc_mod",
           "bfi10_neuro_mod",
           "bfi10_open_mod") %>%
    mutate(birth_year = int_year - age)
  
  citizens$country_mod <- countrycode(citizens$country_mod, origin = "iso3n", destination = "iso3c")
  
  #rm(easySHARE_rel9_0_0)
}

head(citizens)
```

### Impute Crisis Data with 0

We impute with 0 in the crisis data, to not introduce fictional crises.

```{r}
NA_counts <- colSums(is.na(EU_crisis_dataset))
NA_counts[NA_counts > 0]
```

```{r}
EU_crisis_dataset$`Banking Crisis`[is.na(EU_crisis_dataset$`Banking Crisis`)] <- 0
EU_crisis_dataset$`Systemic Crisis`[is.na(EU_crisis_dataset$`Systemic Crisis`)] <- 0
EU_crisis_dataset$`Inflation Crises`[is.na(EU_crisis_dataset$`Inflation Crises`)] <- 0
EU_crisis_dataset$`Currency Crises`[is.na(EU_crisis_dataset$`Currency Crises`)] <- 0
```

```{r}
NA_counts <- colSums(is.na(EU_crisis_dataset))
NA_counts[NA_counts > 0]
```

```{r}
head(EU_crisis_dataset)
```

## Add columns - influenced by recessions at times in their lives

Add life ranges to share dataset

```{r}

horizontal_crises <- EU_crisis_dataset %>%
  pivot_longer(cols = c(`Banking Crisis`, `Currency Crises`, `Inflation Crises`), 
               names_to = "Crisis_Type", 
               values_to = "Crisis_Flag") %>%
  filter(Crisis_Flag == 1) %>%  # Keep only rows where the crisis occurred
  group_by(CC3, Crisis_Type) %>%
  summarise(Years = list(Year), .groups = "drop") %>%
  pivot_wider(names_from = Crisis_Type, values_from = Years)


citizens <- citizens %>%
  mutate(
    range_birth = Map(seq, birth_year - 7, birth_year + 5),
    range_childhood = Map(seq, birth_year + 6, birth_year + 10),
    range_teenage = Map(seq, birth_year + 11, birth_year + 17),
    range_early_adulthood = Map(seq, birth_year + 18, birth_year + 25),
    range_middle_adulthood = Map(seq, birth_year + 26, birth_year + 35),
    range_late_adulthood = Map(seq, birth_year + 36, birth_year + 45)
  )

# TODO try analysis methods

matches <- citizens %>%
  left_join(horizontal_crises, by = c("country_mod" = "CC3")) %>%
  rowwise() %>%
  mutate(
    # Banking crisis
    cr_banking_birth = as.integer(length(intersect(unlist(range_birth),
                                              unlist(`Banking Crisis`))) > 0),
    cr_banking_teenage = as.integer(length(intersect(unlist(range_teenage),
                                                unlist(`Banking Crisis`))) > 0),
    cr_banking_early_adulthood = as.integer(length(intersect(unlist(range_early_adulthood),
                                                        unlist(`Banking Crisis`))) > 0),
    cr_banking_middle_adulthood = as.integer(length(intersect(unlist(range_middle_adulthood),
                                                  unlist(`Banking Crisis`))) > 0),
    cr_banking_late_adulthood = as.integer(length(intersect(unlist(range_late_adulthood),
                                                  unlist(`Banking Crisis`))) > 0),
    # Systematic crisis
    cr_system_birth = as.integer(length(intersect(unlist(range_birth),
                                              unlist(`Banking Crisis`))) > 0),
    cr_system_teenage = as.integer(length(intersect(unlist(range_teenage),
                                                unlist(`Banking Crisis`))) > 0),
    cr_system_early_adulthood = as.integer(length(intersect(unlist(range_early_adulthood),
                                                        unlist(`Banking Crisis`))) > 0),
    cr_system_middle_adulthood = as.integer(length(intersect(unlist(range_middle_adulthood),
                                                  unlist(`Banking Crisis`))) > 0),
    cr_system_late_adulthood = as.integer(length(intersect(unlist(range_late_adulthood),
                                                  unlist(`Banking Crisis`))) > 0),
    # Currency crisis
    cr_currency_birth = as.integer(length(intersect(unlist(range_birth),
                                              unlist(`Currency Crises`))) > 0),
    cr_currency_teenage = as.integer(length(intersect(unlist(range_teenage),
                                                unlist(`Currency Crises`))) > 0),
    cr_currency_early_adulthood = as.integer(length(intersect(unlist(range_early_adulthood),
                                                        unlist(`Currency Crises`))) > 0),
    cr_currency_middle_adulthood = as.integer(length(intersect(unlist(range_middle_adulthood),
                                                  unlist(`Currency Crises`))) > 0),
    cr_currency_late_adulthood = as.integer(length(intersect(unlist(range_late_adulthood),
                                                  unlist(`Currency Crises`))) > 0),
    # Inflation crisis
    cr_inflation_birth = as.integer(length(intersect(unlist(range_birth),
                                              unlist(`Inflation Crises`))) > 0),
    cr_inflation_teenage = as.integer(length(intersect(unlist(range_teenage),
                                                unlist(`Inflation Crises`))) > 0),
    cr_inflation_early_adulthood = as.integer(length(intersect(unlist(range_early_adulthood),
                                                        unlist(`Inflation Crises`))) > 0),
    cr_inflation_middle_adulthood = as.integer(length(intersect(unlist(range_middle_adulthood),
                                                  unlist(`Inflation Crises`))) > 0),
    cr_inflation_late_adulthood = as.integer(length(intersect(unlist(range_late_adulthood),
                                                  unlist(`Inflation Crises`))) > 0)
    
  ) %>%
  ungroup() %>%
  select(mergeid,
         int_year,
         age,
         country_mod,
         female,
         bfi10_extra_mod,
         bfi10_agree_mod,
         bfi10_consc_mod,
         bfi10_neuro_mod,
         bfi10_open_mod,
         # Banking
         cr_banking_birth,
         cr_banking_teenage,
         cr_banking_early_adulthood,
         cr_banking_middle_adulthood,
         cr_banking_late_adulthood,
         # System
         cr_system_birth,
         cr_system_teenage,
         cr_system_early_adulthood,
         cr_system_middle_adulthood,
         cr_system_late_adulthood,
         # Currency
         cr_currency_birth,
         cr_currency_teenage,
         cr_currency_early_adulthood,
         cr_currency_middle_adulthood,
         cr_currency_late_adulthood,
         # Inflation
         cr_inflation_birth,
         cr_inflation_teenage,
         cr_inflation_early_adulthood,
         cr_inflation_middle_adulthood,
         cr_inflation_late_adulthood)

match_for_matrix <- matches %>%
  select(int_year,
         age,
         female,
         bfi10_extra_mod,
         bfi10_agree_mod,
         bfi10_consc_mod,
         bfi10_neuro_mod,
         bfi10_open_mod,
         # Banking
         cr_banking_birth,
         cr_banking_teenage,
         cr_banking_early_adulthood,
         cr_banking_middle_adulthood,
         cr_banking_late_adulthood,
         # System
         cr_system_birth,
         cr_system_teenage,
         cr_system_early_adulthood,
         cr_system_middle_adulthood,
         cr_system_late_adulthood,
         # Currency
         cr_currency_birth,
         cr_currency_teenage,
         cr_currency_early_adulthood,
         cr_currency_middle_adulthood,
         cr_currency_late_adulthood,
         # Inflation
         cr_inflation_birth,
         cr_inflation_teenage,
         cr_inflation_early_adulthood,
         cr_inflation_middle_adulthood,
         cr_inflation_late_adulthood)
```

Now these can be analyzed for the impact of recessions during times in their lives.

# Plotting

```{r}
correlation_matrix <- cor(match_for_matrix, use = "pairwise.complete.obs")

View(correlation_matrix)

png("correlation_plot_new.png", width = 2800, height = 2800)
```

```{r}

corrplot(correlation_matrix, method = "color", tl.col = "black", tl.srt = 45)

```

-   **Pairplots/Scatterplot Matrix**: Visualize relationships between features.

-   **Principal Component Analysis (PCA)**: Reduce dimensionality and find key components.

-   **Mutual Information**: Measure dependency between variables.

-   **Feature Importance**: Use models like Random Forests to determine feature relevance.

-   **Clustering (e.g., k-means, DBSCAN)**: Identify patterns or groupings.

```{r}

set.seed(42)

scaled_data = scale(correlation_matrix)
pca <- prcomp(scaled_data)
pca_data <- pca$x[, 1:2]  # Keep the first two components
kmeans_result <- kmeans(pca_data, centers = 3)

# Visualize PCA-based clustering
plot(pca_data, col = kmeans_result$cluster, pch = 16, main = "K-means Clustering with PCA")
points(kmeans_result$centers, col = 1:3, pch = 8, cex = 2)

```

-   **Heatmaps**: Visualize patterns or distributions in data.

```{r}

heatmap(correlation_matrix, main = "Basic Heatmap")
```

Mann-Whitney-U_test

-   **#ANOVA or t-tests**: Assess differences between groups.

-   **Partial Correlation**: Control for confounding variables.

<!-- -->

-   **Time Series Analysis**: Study trends, seasonality, and cyclic behavior.

-   **Residual Plots**: Evaluate relationships and detect non-linear patterns.

train a tree model with labels as output and see what it spits out.

```{r}

head(matches)
```

```{r}

library(rpart)
```

```{r}

sampledata = matches[sample(nrow(matches), 15000), ]

sampledata = na.omit(sampledata)

sampledata <- sampledata[, c("bfi10_consc_mod",
                             "bfi10_extra_mod",
                             "bfi10_agree_mod",
                             "bfi10_neuro_mod",
                             "bfi10_open_mod",
                             "age",
                             "female",
                             # Banking
                             "cr_banking_birth",
                             "cr_banking_teenage",
                             "cr_banking_early_adulthood",
                             "cr_banking_middle_adulthood",
                             "cr_banking_late_adulthood",
                             # System
                             "cr_system_birth",
                             "cr_system_teenage",
                             "cr_system_early_adulthood",
                             "cr_system_middle_adulthood",
                             "cr_system_late_adulthood",
                             # Currency
                             "cr_currency_birth",
                             "cr_currency_teenage",
                             "cr_currency_early_adulthood",
                             "cr_currency_middle_adulthood",
                             "cr_currency_late_adulthood",
                             # Inflation
                             "cr_inflation_birth",
                             "cr_inflation_teenage",
                             "cr_inflation_early_adulthood",
                             "cr_inflation_middle_adulthood",
                             "cr_inflation_late_adulthood")]


control <- rpart.control(
  maxdepth = 10,
  minsplit = 50,   # Increase to avoid too many splits
  cp = 0.01        # Prune the tree more aggressively
)

```

```{r}

treeModel <- rpart(bfi10_consc_mod ~ ., data = sampledata, method = "class", control = control)
```

```{r}

print(treeModel)

```

Having a hard time making the tree pick anything other than country.

```{r}

rpart.plot(treeModel)
```

```{r}

subsetData <- subset(matches, cr_banking_teenage %in% c(0, 1))

wilcox.test(bfi10_extra_mod ~ cr_banking_teenage, data = subsetData)
```

This suggests that extroversion does not significantly differ when experiencing a banking crisis in teenage years

```{r}

traits <- c("bfi10_extra_mod", "bfi10_agree_mod", "bfi10_consc_mod", "bfi10_neuro_mod", "bfi10_open_mod")
for (trait in traits) {
  cat("Testing", trait, ":\n")
  print(wilcox.test(matches[[trait]] ~ matches$cr_inflation_teenage))
  cat("\n")
}
```

With p-value = 2.204e-08 for cr_inflation_teenage and bfi10_extra_mod - this combination shows a statistical significance of the impact of inflation during teenage years on the extroversion of a person.
